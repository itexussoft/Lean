namespace QuantConnect.Brokerages.InteractiveBrokers.Client
{
    using System;

    public interface IBrokerageClient
    {
        event EventHandler<ErrorEventArgs> Error;
        event EventHandler<CurrentTimeUtcEventArgs> CurrentTimeUtc;
        event EventHandler<TickPriceEventArgs> TickPrice;
        event EventHandler<TickSizeEventArgs> TickSize;
        event EventHandler<TickStringEventArgs> TickString;
        event EventHandler<TickGenericEventArgs> TickGeneric;
        event EventHandler<TickEfpEventArgs> TickEfp;
        event EventHandler<DeltaNeutralValidationEventArgs> DeltaNeutralValidation;
        event EventHandler<TickOptionComputationEventArgs> TickOptionComputation;
        event EventHandler<TickSnapshotEndEventArgs> TickSnapshotEnd;
        event EventHandler<NextValidIdEventArgs> NextValidId;
        event EventHandler<ManagedAccountsEventArgs> ManagedAccounts;
        event EventHandler ConnectionClosed;
        event EventHandler<AccountSummaryEventArgs> AccountSummary;
        event EventHandler<RequestEndEventArgs> AccountSummaryEnd;
        event EventHandler<ContractDetailsEventArgs> BondContractDetails;
        event EventHandler<UpdateAccountValueEventArgs> UpdateAccountValue;
        event EventHandler<UpdatePortfolioEventArgs> UpdatePortfolio;
        event EventHandler<UpdateAccountTimeEventArgs> UpdateAccountTime;
        event EventHandler<AccountDownloadEndEventArgs> AccountDownloadEnd;
        event EventHandler<OrderStatusEventArgs> OrderStatus;
        event EventHandler<OpenOrderEventArgs> OpenOrder;
        event EventHandler OpenOrderEnd;
        event EventHandler<ContractDetailsEventArgs> ContractDetails;
        event EventHandler<RequestEndEventArgs> ContractDetailsEnd;
        event EventHandler<ExecutionDetailsEventArgs> ExecutionDetails;
        event EventHandler<RequestEndEventArgs> ExecutionDetailsEnd;
        event EventHandler<CommissionReportEventArgs> CommissionReport;
        event EventHandler<FundamentalDataEventArgs> FundamentalData;
        event EventHandler<HistoricalDataEventArgs> HistoricalData;
        event EventHandler<HistoricalDataUpdateEventArgs> HistoricalDataUpdate;
        event EventHandler<HistoricalDataEndEventArgs> HistoricalDataEnd;
        event EventHandler<MarketDataTypeEventArgs> MarketDataType;
        event EventHandler<UpdateMarketDepthEventArgs> UpdateMarketDepth;
        event EventHandler<UpdateMarketDepthLevel2EventArgs> UpdateMarketDepthLevel2;
        event EventHandler<UpdateNewsBulletinEventArgs> UpdateNewsBulletin;
        event EventHandler<PositionEventArgs> Position;
        event EventHandler PositionEnd;
        event EventHandler<RealtimeBarEventArgs> RealtimeBar;
        event EventHandler<ScannerParametersEventArgs> ScannerParameters;
        event EventHandler<ScannerDataEventArgs> ScannerData;
        event EventHandler<RequestEndEventArgs> ScannerDataEnd;
        event EventHandler<ReceiveFaEventArgs> ReceiveFa;
        event EventHandler<VerifyMessageApiEventArgs> VerifyMessageApi;
        event EventHandler<VerifyCompletedEventArgs> VerifyCompleted;
        event EventHandler<VerifyAndAuthMessageApiEventArgs> VerifyAndAuthMessageApi;
        event EventHandler<VerifyAndAuthCompletedEventArgs> VerifyAndAuthCompleted;
        event EventHandler<DisplayGroupListEventArgs> DisplayGroupList;
        event EventHandler<DisplayGroupUpdatedEventArgs> DisplayGroupUpdated;
        event EventHandler ConnectAck;
        event EventHandler<PositionMultiEventArgs> PositionMulti;
        event EventHandler<RequestEndEventArgs> PositionMultiEnd;
        event EventHandler<AccountUpdateMultiEventArgs> AccountUpdateMulti;
        event EventHandler<RequestEndEventArgs> AccountUpdateMultiEnd;
        event EventHandler<SecurityDefinitionOptionParameterEventArgs> SecurityDefinitionOptionParameter;
        event EventHandler<RequestEndEventArgs> SecurityDefinitionOptionParameterEnd;
        event EventHandler<SoftDollarTiersEventArgs> SoftDollarTiers;
        event EventHandler<FamilyCodesEventArgs> FamilyCodes;
        event EventHandler<SymbolSamplesEventArgs> SymbolSamples;
        event EventHandler<MktDepthExchangesEventArgs> MktDepthExchanges;
        event EventHandler<TickNewsEventArgs> TickNews;
        event EventHandler<SmartComponentsEventArgs> SmartComponents;
        event EventHandler<TickReqParamsEventArgs> TickReqParams;
        event EventHandler<NewsProvidersEventArgs> NewsProviders;
        event EventHandler<NewsArticleEventArgs> NewsArticle;
        event EventHandler<HistoricalNewsEventArgs> HistoricalNews;
        event EventHandler<HistoricalNewsEndEventArgs> HistoricalNewsEnd;
        event EventHandler<HeadTimestampEventArgs> HeadTimestamp;
        event EventHandler<HistogramDataEventArgs> HistogramData;
        event EventHandler<RerouteMktDataReqEventArgs> RerouteMktDataReq;
        event EventHandler<RerouteMktDepthReqEventArgs> RerouteMktDepthReq;
        event EventHandler<MarketRuleEventArgs> MarketRule;
        event EventHandler<PnlEventArgs> Pnl;
        event EventHandler<PnlSingleEventArgs> PnlSingle;
    }
}